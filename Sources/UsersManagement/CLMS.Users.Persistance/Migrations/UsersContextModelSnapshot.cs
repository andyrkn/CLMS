// <auto-generated />
using System;
using CLMS.Users.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CLMS.Users.Persistance.Migrations
{
    [DbContext(typeof(UsersContext))]
    partial class UsersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CLMS.Users.Domain.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CLMS.Users.Domain.ApplicationUser", b =>
                {
                    b.OwnsOne("CLMS.Users.Domain.Name", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("ApplicationUserId");

                            b1.Property<string>("Value")
                                .IsRequired();

                            b1.HasKey("ApplicationUserId");

                            b1.ToTable("Users");

                            b1.HasOne("CLMS.Users.Domain.ApplicationUser")
                                .WithOne("FirstName")
                                .HasForeignKey("CLMS.Users.Domain.Name", "ApplicationUserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("CLMS.Users.Domain.Name", "LastName", b1 =>
                        {
                            b1.Property<Guid>("ApplicationUserId");

                            b1.Property<string>("Value")
                                .IsRequired();

                            b1.HasKey("ApplicationUserId");

                            b1.ToTable("Users");

                            b1.HasOne("CLMS.Users.Domain.ApplicationUser")
                                .WithOne("LastName")
                                .HasForeignKey("CLMS.Users.Domain.Name", "ApplicationUserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
