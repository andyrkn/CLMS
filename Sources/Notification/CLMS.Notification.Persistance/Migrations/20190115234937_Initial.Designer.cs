// <auto-generated />
using System;
using CLMS.Notification.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CLMS.Notification.Persistance.Migrations
{
    [DbContext(typeof(NotificationContext))]
    [Migration("20190115234937_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CLMS.Notification.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid>("OriginId");

                    b.HasKey("Id");

                    b.HasIndex("OriginId")
                        .IsUnique();

                    b.ToTable("Events");
                });

            modelBuilder.Entity("CLMS.Notification.Domain.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<Guid?>("EventId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("CLMS.Notification.Domain.Entities.Subscription", b =>
                {
                    b.HasOne("CLMS.Notification.Domain.Entities.Event")
                        .WithMany("Subscriptions")
                        .HasForeignKey("EventId");
                });
#pragma warning restore 612, 618
        }
    }
}
